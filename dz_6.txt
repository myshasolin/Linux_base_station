	# 1. Вывести на экран 3 раза имя пользователя, от которого запускается команда.

	# делаю вывод в цикле for без создания файла:

myshasolin@myshasolin-VB:~/dz/dz_6$ for i in {1..3}; do echo $(whoami); done
myshasolin
myshasolin
myshasolin




	# 2. Вывести с помощью цикла while все четные числа от 0 до 100 включительно.

	# создадим файл:

myshasolin@myshasolin-VB:~/dz/dz_6$ nano task_2.sh

	# напишем в нём:

myshasolin@myshasolin-VB:~/dz/dz_6$ cat task_2.sh 
#! /bin/bash
num=0
while [ $num -lt 101 ]
do
  echo $num
  let num+=2
done

	# а теперь дадим права на исполнение файла и исполним:

myshasolin@myshasolin-VB:~/dz/dz_6$ chmod u+x task_2.sh 
myshasolin@myshasolin-VB:~/dz/dz_6$ ll
итого 12
drwxrwxr-x 2 myshasolin myshasolin 4096 янв 23 19:54 ./
drwxrw-r-t 6 myshasolin myshasolin 4096 янв 23 19:49 ../
-rwxrw-r-- 1 myshasolin myshasolin   75 янв 23 19:54 task_2.sh*

myshasolin@myshasolin-VB:~/dz/dz_6$ . task_2.sh 
0
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100





	# 3. Создать с помощью nano файл test.txt. Настроить автоматический бэкап этого файла раз в 10 минут в файл с названием test.txt.bak с использованием cron.

	# создадим файл, проверим его в списке:

myshasolin@myshasolin-VB:~/dz/dz_6$ echo > test.txt
myshasolin@myshasolin-VB:~/dz/dz_6$ ls
task_2.sh  test.txt

	# создадим задачу в crontab:

myshasolin@myshasolin-VB:~/dz/dz_6$ crontab -e
crontab: installing new crontab

	# так выглядит задача в crontab:

myshasolin@myshasolin-VB:~/dz/dz_6$ crontab -l
 */10 * * * * cat /home/myshasolin/dz/dz_6/test.txt > /home/myshasolin/dz/dz_6/test.txt.bak

	# посмотрим - файл бекапа test.txt.bak создался:

myshasolin@myshasolin-VB:~/dz/dz_6$ ls
task_2.sh  test.txt  test.txt.bak

	# а вот первое выполнение задачи в файле логов в 20:30:

myshasolin@myshasolin-VB:~/dz/dz_6$ tail -3 /var/log/cron.log 
Jan 23 20:21:36 myshasolin-VB crontab[5402]: (myshasolin) LIST (myshasolin)
Jan 23 20:30:01 myshasolin-VB CRON[5412]: (root) CMD ([ -x /etc/init.d/anacron ] && if [ ! -d /run/systemd/system ]; then /usr/sbin/invoke-rc.d anacron start >/dev/null; fi)
Jan 23 20:30:01 myshasolin-VB CRON[5413]: (myshasolin) CMD (cat /home/myshasolin/dz/dz_6/test.txt > /home/myshasolin/dz/dz_6/test.txt.bak)

	# ну и спустя некоторое время захожу ещё раз в файл логов, чтоб убедиться, что всё ок и норм, там уже плюсом есть строчки в 20:40 и 20:50:

myshasolin@myshasolin-VB:~/dz/dz_6$ tail /var/log/cron.log 
Jan 23 20:21:01 myshasolin-VB cron[4665]: (myshasolin) RELOAD (crontabs/myshasolin)
Jan 23 20:21:36 myshasolin-VB crontab[5402]: (myshasolin) LIST (myshasolin)
Jan 23 20:30:01 myshasolin-VB CRON[5412]: (root) CMD ([ -x /etc/init.d/anacron ] && if [ ! -d /run/systemd/system ]; then /usr/sbin/invoke-rc.d anacron start >/dev/null; fi)
Jan 23 20:30:01 myshasolin-VB CRON[5413]: (myshasolin) CMD (cat /home/myshasolin/dz/dz_6/test.txt > /home/myshasolin/dz/dz_6/test.txt.bak)
Jan 23 20:34:23 myshasolin-VB anacron[5437]: Anacron 2.3 started on 2022-01-23
Jan 23 20:34:23 myshasolin-VB anacron[5437]: Normal exit (0 jobs run)
Jan 23 20:40:01 myshasolin-VB CRON[5447]: (myshasolin) CMD (cat /home/myshasolin/dz/dz_6/test.txt > /home/myshasolin/dz/dz_6/test.txt.bak)
Jan 23 20:50:01 myshasolin-VB CRON[5600]: (myshasolin) CMD (cat /home/myshasolin/dz/dz_6/test.txt > /home/myshasolin/dz/dz_6/test.txt.bak)

	# проверим ещё и так. Файлы-то пустые. Запишу в test.txt текст и проверю, есть ли этот текст в файле test.txt.bak сейчас и во время, кратное 10-ти минутам:

myshasolin@myshasolin-VB:~/dz/dz_6$ nano test.txt
myshasolin@myshasolin-VB:~/dz/dz_6$ cat test.txt
один два три
myshasolin@myshasolin-VB:~/dz/dz_6$ cat test.txt.bak 
										# файл пустой
myshasolin@myshasolin-VB:~/dz/dz_6$ tail -2 /var/log/cron.log
Jan 23 20:57:01 myshasolin-VB cron[4665]: (myshasolin) RELOAD (crontabs/myshasolin)
Jan 23 21:00:01 myshasolin-VB CRON[5701]: (myshasolin) CMD (cat /home/myshasolin/dz/dz_6/test.txt > /home/myshasolin/dz/dz_6/test.txt.bak)

myshasolin@myshasolin-VB:~/dz/dz_6$ cat test.txt.bak 
один два три									# ну а теперь после 21:00 не пустой - бекап работает

